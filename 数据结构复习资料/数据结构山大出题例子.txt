一、简答题。

     1.插入排序、选择排序、冒泡排序、基数排序、堆排序的算法中其比较次数与初始数据集顺序无关的是？请说明理由。

     2.已知待散列的线性表为（1,8,16,27,25,28等数据具体的忘了尴尬），散列用的一维地址空间为11，假定选用的散列函数是H（K）= K mod 11，将其存入线性开型寻址散列和链表结构。

     3.给一个树的层序遍历ABCDEFG，中序遍历（具体忘了尴尬），写出其后序遍历。

     4.给出二叉搜索树的层序遍历（具体数据忘了尴尬），问这个二叉搜索树是否是完全二叉树。

     5.请说明广度优先搜索和深度优先搜索算法中所使用的堆栈、队列的作用。

二、应用题。

     1.有学号1-36名学生，如果 i , j两个学生住在同一个宿舍用（i,j）表示，集合S={（1,2），（4,19）......}如何求集合S中包含多少宿舍。

     2.构建霍夫曼树，求ABCDEF的霍夫曼代码

     3.有20门课程，如果 i , j 两门课的学习顺序为先学 i , 再学 j  那么用（ i , j ）表示，集合S={(2,3),(4,6)....}，求至少要安排多少学期.

     4.给出ABCDE消耗邻接矩阵，求A到个点的最短路径

三、算法题。

     1.一个递增的链表，编写一个算法去除链表中的重复元素。例如，将（7,12,12,14,23）变为（7,12,14,23），请写出算法思想和算法实现并分析算法的复杂性。

     2.编写一个算法如何判断一个用二叉树链表存储的二叉树是否是最大堆，写出算法思想和算法实现




//换个数，换个问法，就是你们的考试题了，我会乱说么……

//起码我们之前的都是这个路数啊，都做了保准没错。

 

//by lxx  2012 12 15

1、设n为正整数，计算下列程序段中带标号@的语句的频度。

z=0;

i=0;

for (j=1;j++;j≤n)  {

    i++;

for (x=i;x++;x≤n)   {

        p=2*p;

    @  k=k+1;

} 

        }  

2、什么是算法的时间复杂性？结合具体算法分析。

3、对比说明顺序表的顺序存储和链接存储的优缺点。

4、顺序存储下的插入删除操作

5、写出在一个单链表中插入或删除值为x的结点的算法。

6、画出循环单链表的结构示意图并写出在其末尾插入一结点的操作步骤。

7、写出将一个单链表中值为x的结点与其后继结点交换位置的算法。

8、画出双链表结构示意图并写出在双链表中P指向的结点之前插入一个结点（值为x）的操作步骤。

9、简述堆栈与队列的结构特点、空与满的条件。

10、写出利用单循环链表实现一个队列的入队出队算法。

11. 写出二叉树的前、中序扫描的递归的算法；按层次遍历的算法。

12. 什么叫Huffman树？由给定权的集合{15,4,12,8,5,19,23}构造对应的Huffman树，并计算其赋权外通路长度。

13.给出对下图中二叉树进行前中后序扫描得到的序列。

14、什么是最大小堆？请画出将序列{11,9,3,6,7,4,5,10,8,1,2}存到一个完全二叉树中的情形，画出将其调整成最小堆阵的过程。

15、写出复制一棵二叉树的算法；求二叉树叶结点个数的算法。

16、请画出由关键码{10,15,30,32,20,50,5,3,25,28,22,18}建立的二叉搜索树的形状。

17、什么是AVL树？请画出由关键码{10,15,30,32,20,50, 5,3,25,28,22,18}建立AVL树的过程。

18、写出在一个二叉搜索树中查找、插入、删除一个结点的算法。

19. 请解释生成树和最小生成树的概念。

20．描述一种最小生成树算法的思想。画出下列网络的最小生成树。

21、给出对题20中所示图的邻接矩阵和邻接链表存储结构，依据此结构从顶点6开始进行DFS和BFS搜索得到的序列？

22. 设文件F={13, 3, 38, 1, 30, 28, 7, 24, 10}，画出利用冒泡法对其进行排序的过程。

23．写出对数列13,7,9,15,8,16,12,11,20,10进行堆排序的过程。

24、描述B_树的结构特点

25、请说出散列方法组织动态表的主要思想及其要解决的两个基本问题。设有一组关键字{72,35,124,153,84,57}需插入到长度为12的哈希表中，请设计一个适当的哈希函数，并构造出对应的哈希表。

26. 在下列5阶B_树中删除关键字70，画出调整后的B树。

1:有10w不同数据，选出最小的10个元素，使用冒泡排序，快速排序（选择第一个为柱子），堆排序，计算出比较的次数
2：构建散列表，矛盾冲突解决使用线性开型寻址，并写出各元素搜索时比较次数
3：一系类元素是否是最大堆，若不是，构建最大堆
4：

